# helper function for ANSI escape codes
# https://stackoverflow.com/questions/5947742/how-to-change-the-output-color-of-echo-in-linux
# Black        0;30     Dark Gray     1;30
# Red          0;31     Light Red     1;31
# Green        0;32     Light Green   1;32
# Brown/Orange 0;33     Yellow        1;33
# Blue         0;34     Light Blue    1;34
# Purple       0;35     Light Purple  1;35
# Cyan         0;36     Light Cyan    1;36
# Light Gray   0;37     White         1;37

# ex: RED='\033[0;31m'
function cesc() 
{
    echo "\033[${1};${2}m"
}

BLACK=`cesc 0 30`
RED=`cesc 0 31`
GREEN=`cesc 0 32`
YELLOW=`cesc 0 33`
BLUE=`cesc 0 34`
PURPLE=`cesc 0 35`
CYAN=`cesc 0 36`
LGRAY=`cesc 0 37`

GRAY=`cesc 1 30`
LRED=`cesc 1 31`
LGREEN=`cesc 1 32`
LYELLOW=`cesc 1 33`
LBLUE=`cesc 1 34`
LPURPLE=`cesc 1 35`
LCYAN=`cesc 1 36`
WHITE=`cesc 1 37`
NC='\033[0m' 
# printf "I ${RED}love${NC} Stack Overflow\n"

aCOLORS="'BLACK' 'RED' 'GREEN' 'YELLOW' 'BLUE' 'PURPLE' 'CYAN' \
    'LGRAY' 'GRAY' 'LRED' 'LGREEN' 'LYELLOW' 'LBLUE' 'LPURPLE'  \
    'LCYAN' 'WHITE' '    NC'";
COLORS="BLACK RED GREEN YELLOW BLUE PURPLE CYAN \
    LGRAY GRAY LRED LGREEN LYELLOW LBLUE LPURPLE  \
    LCYAN WHITE NC";
COLOR_CODES="'${BLACK}' '${RED}' '${GREEN}' '${YELLOW}' '${BLUE}' '${PURPLE}' '${CYAN}' \
    '${LGRAY}' '${GRAY}' '${LRED}' '${LGREEN}' '${LYELLOW}' '${LBLUE}' '${LPURPLE}'  \
    '${LCYAN}' '${WHITE}' '${NC}'";


PS1="${LCYAN}[$(date +%H%M)][\u${NC}@${PURPLE}\h${NC}:${LCYAN}\w]\$${NC} "

#!/bin/bash
#
#   This file echoes a bunch of color codes to the 
#   terminal to demonstrate what's available.  Each 
#   line is the color code of one forground color,
#   out of 17 (default + 16 escapes), followed by a 
#   test use of that color on all nine background 
#   colors (default + 8 escapes).
#
function echo_colors()
{
    T='gYw'   # The test text

    echo -e "\n                 40m     41m     42m     43m\
         44m     45m     46m     47m";

    # for FGs in '    m' '   1m' '  30m' '1;30m' '  31m' '1;31m' '  32m' \
    #            '1;32m' '  33m' '1;33m' '  34m' '1;34m' '  35m' '1;35m' \
    #            '  36m' '1;36m' '  37m' '1;37m';
    for FGs in $COLORS
        do 
        FG="${!FGs}"
        printf "%*s ${FG} $T  " 9 "$FGs"

        for BG in 40m 41m 42m 43m 44m 45m 46m 47m;
            do echo -en "$EINS \033[$FG\033[$BG  $T  \033[0m";
        done
        echo
    done
    echo
}
