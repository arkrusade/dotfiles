#!/bin/bash                 # example bash shebang

sudo tcpdump -S "tcp[tcpflags] & (tcp-syn|tcp-ack|tcp-fin) != 0"        # watch 3-way handshake

    ##############################
    ##      Bash commands       ##
    ##############################

echo $?                     # see status of last command
sudo !!                     # redo last command as root/sudo
<c-x-e>                     # open editor to run command
 ls -l                      # don't add command to history (leading space)
history                     # lists last few commands from history
fc                          # fix the last command in editor
cat file | tee -a log | cat > /dev/null             # intercept ouput and log to file, then continue piping
disown -a                   # prevents terminal exit from terminating child processes
mkdir -p folder/{sub1,sub2}/{sub1,sub2,sub3}        # makes subfolders with all permutations
ln -sf $sourcefile $dest    # soft symlink between source and dest files

command -v                  # figure out which command it corresponds to
hash <command>
type <command>

readlink -f file.ext        # get full path of a file

nohup echo "asdf" &         # run in background and capture output into nohup.out
sudo ntpdate time.windows.com     # update system time using time server

if [ $? -eq 0 ]; then echo "good command"; else echo "bad command"; fi       # if check if last command errored
$(( 1 + 2 ))                # bash arithmetic addition with numbers


    ######## Readline with vi editing mode
|                           # Move to the n-th column
C-w                         # Delete the previous word.
C-u                         # Delete from the cursor to the beginning of line.
U                           # Undo all previous text modifications.
C-i                         # List all possible completions.
*                           # Insert all possible completions.
#                           # Comment and send command to history
_                           # Insert n-th argument from previous command



    ######## Bash script code ##
set -Eeuo pipefail          # exits if command fails
set -x                      # check which way, prints commands while executing
set -e                      # stops script on error
tmpfile=$(mktemp /tmp/abc-script.XXXXXX)        # make tempfile
echo -ne <colorcode>text    # print using color codes to screen

    ######## Important bash (?) shell commands ##
chmod +x test.sh            # sets the script to be executable
echo $?                     # prints the last command exit status
eval $(ssh-agent -s)        # tell if ssh-agent is running

curl ifconfig.me            # what is my IP address
curl ipinfo.io/ip           # what is my IP address

find . -name 'mystring'     # Finds file by name nested

ssh-keygen -t rsa -b 4096 -C "justinjlee99@gmail.com" -f $HOME/.ssh/id_rsa

ssh-copy-id id@server               # copy ssh keypair to server

sudo chmod 600 ~/.ssh/id_rsa            # set permissions for ssh key
sudo chmod 600 ~/.ssh/id_rsa.pub

    ######## Python related commands

python3 -m venv env         # Create python virtual environment in env folder
echo $VIRTUAL_ENV           # Checks the virtual environment directory and that it is active
pip install -e .            # Installs everything in virtual environment for python dependencies

python -m pdb -c continue main.py               # starts debugger after crash/error

    ######## Vim commands
:mks                        # Write a Vim script that restores the current editing session.
vim -S Session.vim          # Restores all tabs
vim +500                    # starts vim at line 500
vim --cmd 'before vimrc' -c 'after vimrc'           # opens vim, then runs commands

    ######## Pymode vim commands
<c-n>                       # auto-complete
<leader>r                   # run python code
<leader>b                   # insert breakpoint


    ######## Tmux commands - tmux
?                           # list shortcuts help
c                           # new window
,                           # name window
w                           # list windows
f                           # find window
&                           # kill window
.                           # move window - prompted for a new number
:movew<CR>                  # move window to the next unused number
:join-pane -t <int>         # joins window as a pane in window of index <int>

<C-s>                       # saves tmux session
<C-r>                       # restores tmux session

    ######## Tmux panes (splits)
%                           # horizontal split
"                           # vertical split "
o                           # swap active panes
<c-o>                       # cycle - swap panes placement
q                           # show pane numbers
x                           # kill pane
z                           # maximize pane
<space>                     # toggle between layouts
!                           # moves current pane to new window

    ######## LLVM stuff

clang -emit-llvm hello.c -c -o hello.bc
opt -load p0/build/mypass/LLVMPJT.so -hello < hello.bc >/dev/null

    ######## Unorganized ########
git status --porcelain | grep '^??' | cut -c4- >> .gitignore     # add untracked files to gitignore
curl -u '$username' https://api.github.com/user/repos -d "{\"name\":\"$repo_name\"}"        # create Github repo from command line
git commit --amend --no-edit                # reuse old commit message

wslpath $(wslvar USERPROFILE)               # get windows user home path inside of wsl ubuntu
printf '%*s' 20 hello               # print string right aligned specific width
echo "${!a}"                        # indirect parameter expansion - gets value of the variable with the name as the variable's value" >> ~/.always_forget.txt 
date                                # prints the current time and date
sudo ntpdate time.windows.com       # updates local time based on ntp server
if [ -O $file ]; then echo "there"; else echo "not"; fi     # check if file or directory exists
