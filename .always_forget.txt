# mark line 

sudo tcpdump -S "tcp[tcpflags] & (tcp-syn|tcp-ack|tcp-fin) != 0"        # watch 3-way handshake

## Bash commands
sudo !!                     # redo last command as root/sudo
<c-x-e>                     # open editor to run command
 ls -l                      # don't add command to history (leading space)
history                     # lists last few commands from history
fc                          # fix a command in editor
cat file | tee -a log | cat > /dev/null             # intercept ouput and log to file, then continue piping
disown -a                   # prevents terminal exit from terminating child processes
mkdir -p folder/{sub1,sub2}/{sub1,sub2,sub3}        # makes subfolders with all permutations

## Bash script header starter code
set -Eeuo pipefail          # exits if command fails
set -x                      # idk

## Scripting in bash
chmod +x test.sh            # sets the script to be executable

echo $?                     # prints the last command exit status

curl ifconfig.me 			# what is my IP address
curl ipinfo.io/ip			# what is my IP address

find . -name 'mystring'     # Finds file by name nested

python3 -m venv env         # Create python virtual environment in env folder
echo $VIRTUAL_ENV           # Checks the virtual environment directory and that it is active
pip install -e .            # Installs everything in virtual environment for python dependencies

## Vim commands
:mks[ession][!] [file]      # Write a Vim script that restores the current editing session.
vim -S Session.vim          # Restores all tabs
                            # When [!] is included an existing file is overwritten.
                            # When [file] is omitted "Session.vim" is used.

## Pymode vim commands
<c-n>                       # auto-complete
<leader>r                   # run python code


## tmux commands
?                           # list shortcuts help
c                           # new window
,                           # name window
w                           # list windows
f                           # find window
&                           # kill window
.                           # move window - prompted for a new number
:movew<CR>                  # move window to the next unused number

## tmux panes (splits)
%                           # horizontal split
"                           # vertical split
o                           # swap active panes
<c-o>                       # cycle - swap panes placement
q                           # show pane numbers
x                           # kill pane
<space>                     # toggle between layouts
